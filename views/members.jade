extends layout

block content 1

    // A set of TABS containing the Administration Members Views
    .search-tabs-wrapper
    
        // Define the TAB list
        ul.nav.nav-tabs(id='memberTabs', role="tablist")
            
            li.active
                a(href="#mapPane" role="tab" data-toggle="tab") Map
            li
                a(href="#chat" role="tab" data-toggle="tab") Chat
            li
                a(href="#profile" role="tab" data-toggle="tab") Profile
            li
                a(href="#account" role="tab" data-toggle="tab") Account
            li
                a(href="#members" role="tab" data-toggle="tab") Members
        
        // Define the content of all TABS in the above TAB list
        .tab-content.search-tabs-content
            
            script.
                console.log("creating map tab...");
            
            // Define the MAP content
            .tab-pane.active(id="mapPane")
                .div(id='mapViewDiv', style='margin:10px')
                    // create the viewLive, viewData and map Lock buttons
                    input.btn.btn-success(id='viewLive', type='button', value='LIVE', data-id='viewLive', disabled='true', style='font-size:10px')
                    
                    input.btn.btn-warning(id='viewData', type='button', value='view data', data-id='viewData', style='font-size:10px')
                    
                    input.btn.btn-info(id='mapLock', type='button', value='LOCKED', data-id='mapLock', style='float:right;font-size:10px')
                    
                // define the Map space
                .div(id='mapDiv', style='border:2px black')
                    #map
                
                // create the time selection controls
                // NEED TO IMPLEMENT THIS!!!!!!!!!
                
                // define the View buttons space
                
                #viewButtons(style='margin:10px')
                
                // MODAL - ADD A NEW POSITION / MAP MARKER
                #addMarkerModal.modal.fade(role='dialog')
                    .modal-dialog
                        // Modal content
                        .modal-content
                            .modal-header
                                button.close(type='button', data-dismiss='modal') Ã—
                                h4.modal-title Add a Map Marker
                            form(method='post', action='/members/addAPosition')
                                .modal-body
                                    .form-group
                                        label(for='mmType') Select a Map Marker type:
                                        select.form-control(id='mmType', name='mmType')
                                            option(value='way', selected) Way-point
                                            option(value='rider') Rider
                                            option(value='customer') Customer
                                            option(value='location') Location
                                    .form-group
                                        label(for='mmMember') Select a MemberID for new Map Marker:
                                        select.form-control(id='mmMember', name='mmMember')
                                            each member, i in members
                                                option(value=member.id, class=(member.id === "45" ? "selected" : "")) #{members[i].username}
                                            
                                    .form-group
                                        label(style='width:100%') Co-ordinates
                                        input.form-control(id='latitude', type='text', name='latitude', value='', style='width:50%')
                                        input.form-control(id='longitude', type='text', name='longitude', value='', style='width:50%')
                                    
                                    .form-group    
                                        label(style='width:100%') Date and Time
                                        input.form-control(id='dateTime', type='text', name='dateTime', value='', style='width:100%')
                                        
                                    .form-group
                                        label(style='width:100%') Visible To Owner
                                        label.radio-inline
                                            input.form-control(id='isVisible', type='radio', name='isVisible', checked)
                                            | Yes
                                        label.radio-inline
                                            input.form-control(id='notVisible', type='radio', name='notVisible')
                                            | No
                                        
                                    .form-group    
                                        label(style='width:100%') Comment
                                        input.form-control(id='comment', type='text', name='comment', value='', style='width:100%')
                                    
                                    
                                .modal-footer
                                    button.btn.btn-default(type='button', data-dismiss='modal') Cancel            
                                    // create the Add Map Marker button
                                    input.btn.btn-warning(name='submit', type='submit', value='Add Map Marker')                   
                
                // ******************** MAP TAB SCRIPT HERE *********************    
                script.
                    
                    // acquire MAP TAB variables
                    
                    var barcelona = null;
                    var map = null;
                    var markers = [];
                    var modal = document.getElementById('addMarkerModal');
                    var trackingMarkers = [];
                    
                    // MAP TAB functions
                    
                    // Initiate map
                    
                    function initMaps() {
                    
                        barcelona = {lat: 41.398, lng: 2.158};
                        map = new google.maps.Map(document.getElementById('map'), {
                            zoom: 15,
                            center: barcelona,
                            disableDefaultUI: true,
                            tilt: 45,
                            heading:180

                        });
                        // add event listener to the Map ( to modal)
                        map.addListener('dblclick', function(event) {
                            $('#addMarkerModal').modal('show');
                            var now = new Date();
                            var position = event.latLng;
                            var lat = position.lat;
                            var lng = position.lng;
                            console.log(lat);
                            console.log(lng);
                            $(".modal-body #latitude").val(lat);
                            $(".modal-body #longitude").val(lng);
                            $(".modal-body #dateTime").val(now);
                            // addMarker(event.latLng);
                        });
                        
                        if($('#viewData').attr('disabled')){
                            createTrackingMarkers();
                        }
                        else{
                            // enable live data
                        }
                        
                    }
                    
                    function viewAllMarkers(){
                        var theID = $(this).data('id');
                        // var theID = JSON.parse($(this).attr('data-id'));
                        console.log('ViewAll buttonID: '+ theID);
                        //clear the map
                        setMapOnAll(null);
                        //display all markers
                        createTrackingMarkers();
                    }
                    
                    // $('#viewAll').on('click', viewAllMarkers);
                    
                    function viewMarkersById(){
                        var theID = $(this).data('id');
                        console.log('Button of member '+ theID);
                        //clear the map
                        setMapOnAll(null);
                        //display only markers with theID
                        createTheseTrackingMarkers(theID);
                    }
                    
                    // for (i = 0; i < buttonIndex; i++){
                    //      console.log('viewButton'+i);
                    //      $('#viewButton' + i).on('click', viewMarkersById);
                    // }
                    
                    function createTrackingMarkers(){
                        trackingMarkers = [];
                        var trackingBounds = new google.maps.LatLngBounds();
                        console.log('There are ' + positions.length + ' markers to be created');
                        
                        
                        for(i = 0; i < positions.length; i++){
                            console.log('making a marker...');
                            var aLatLng = new google.maps.LatLng(positions[i].lat, positions[i].lng);
                            trackingMarkers[i] = new google.maps.Marker({
                                position: aLatLng, 
                                map: map
                            });
                            trackingBounds.extend(aLatLng);
                            console.log(positions[i].memberId);
                            
                            
                        }
                        map.fitBounds(trackingBounds);
                    }
                    
                    function refreshParticipants(updatedParticipants){
                        console.log('participants refreshed');
                        participants = updatedParticipants;
                        if(document.getElementById('viewLive').disabled){
                        
                            displayTheseMarkers(participants);
                        }
                    }
                    
                    function displayTheseMarkers(someMarkers){
                        console.log('displaying new set of marker....');
                        //clear the map
                        setMapOnAll(null);
                        var trackingBounds = new google.maps.LatLngBounds();
                        console.log(someMarkers.length + ' markers to create');
                        for(i = 0; i < someMarkers.length; i++){
                            var aLatLng = new google.maps.LatLng(someMarkers[i].lat, someMarkers[i].lng);
                            trackingMarkers[i] = new google.maps.Marker({
                                    position: aLatLng, 
                                    map: map
                                });
                            trackingBounds.extend(aLatLng);
                                
                            
                            
                        }
                        map.fitBounds(trackingBounds);
                    }
                    
                    function createTheseTrackingMarkers(memberID){
                        var trackingBounds = new google.maps.LatLngBounds();
                        console.log('There are ' + positions.length + ' markers to be created');
                        for(i = 0; i < positions.length; i++){
                            if (positions[i].lat != null && positions[i].lng != null && positions[i].memberId === memberID){
                                
                                console.log('making a marker for memberID: '+memberID+' only...');
                                var aLatLng = new google.maps.LatLng(positions[i].lat, positions[i].lng);
                                trackingMarkers[i] = new google.maps.Marker({
                                    position: aLatLng, 
                                    map: map
                                });
                                trackingBounds.extend(aLatLng);
                                console.log(positions[i].memberId);
                            }
                            
                        }
                        map.fitBounds(trackingBounds);
                    }
                    
                    function viewData(){
                    
                        // enable/disable buttons
                        $('#viewLive').attr('disabled',false);
                        $('#viewData').attr('disabled','true');
                        
                        $('#viewAll').attr('disabled',true);
                        
                        var index = 0;
                        var moreButtons = true;
                        while (moreButtons){
                            var exists = document.getElementById('viewButton'+index);
                            if(exists){
                                $('#viewButton'+index).attr('disabled',false);
                                index++;
                            }
                            else{
                                moreButtons=false;
                            }
                        }
                        createTrackingMarkers();
                    }
                    
                    
                    function viewLive(){
                    
                        //clear the map
                        setMapOnAll(null);
                        
                        // enable/disable buttons
                        
                        $('#viewLive').attr('disabled',true);
                        $('#viewAll').attr('disabled',true);
                        $('#viewData').attr('disabled',false);
                        var index = 0;
                        var moreButtons = true;
                        while (moreButtons){
                            var exists = document.getElementById('viewButton'+index);
                            console.log(exists);
                            if(exists){
                                $('#viewButton'+index).attr('disabled',true);
                                index++;
                            }
                            else{
                                moreButtons=false;
                            }
                        }
                    
                    }
                    
                    // Sets the map on all markers in the array
                    function setMapOnAll(map){
                        console.log(trackingMarkers.length + ' tracking markers');
                        for (var i = 0; i < trackingMarkers.length; i++){
                            console.log(i);
                            trackingMarkers[i].setMap(map);
                        }
                    }
                    

                    $('#viewLive').attr('disabled',true);
                    $('#viewData').on('click', viewData);
                    $('#viewLive').on('click', viewLive);
                    
                    
            
            script.
                console.log("creating chat tab...");
            
            
            
            
            
            
            
            
            .tab-pane(id="chat")
                //-
                    span Your name:
                        input(type="text", value="#{user.username}")#name
                .div
                    .row
                        .col-xs-9
                            .div(id="chatMessages")
                                #messages
                        .col-xs-3
                            .div(id="chatParticipants")
                                b Participants
                                #participants
                    .row
                        form#messageForm
                            .col-xs-9
                                .div(id="chatOut")
                                    input("text",placeholder="Share something!", maxlength=256)#outgoingMessage
                            .col-xs-3
                                .div(id="sendButton")
                                    input(type="button", value="Share", disabled=true)#send
                
                        
                        
                
                
            
            script.
                console.log("creating profile tab...");
            
            .tab-pane(id="profile")
                h1 My Profile - #{user.username}
                form(method='post', action='/members/approved', enctype='multipart/form-data')
                    .row
                        .col-xs-4
                            // put the photo here
                            img(src='images/uploads/' + user.image , alt='Profile Photo')#profilePhoto
                            
                        .col-xs-8
                            .form-group
                                label First Name
                                input.form-control(name='name', type='text', value=user.name)
                            .form-group
                                label Surname
                                input.form-control(name='surname', type='text', value=user.surname)
                            .form-group
                                label NIE
                                input.form-control(name='nie', type='text', value=user.nie)
                            .form-group
                                label Telephone
                                input.form-control(name='telephone', type='text', value=user.telephone)
                    
                    
                    
                    .row
                        .col-xs-4
                            .form-group
                                label Company Name
                                input.form-control(name='company', type='text', value=user.company)
                            
                    
                        .col-xs-8
                            .form-group
                                label Email
                                input.form-control(name='email', type='text', value=user.email)
                        
                
            script.
                console.log("creating account tab...");
            
            .tab-pane(id="account")
                h1 My Account
                .panel.panel-primary
                    .panel-heading Change password....
                    .panel-body
                        form(method='post', action='members/passwordChange')
                            .form-group
                                label Current Password
                                input.form-control(name='currentPassword', type='password', placeholder='Enter Current Username')
                            .form-group
                                label New Password
                                input.form-control(name='newPassword1', type='password', placeholder='Enter New Password')
                            .form-group
                                label Confirm New Password
                                input.form-control(name='newPassword2', type='password', placeholder='Confirm New Password')
                            input.btn.btn-default(name='submitNewPassword', type='submit', value='Set New Password')
                div
                    p Option 2
                div
                    p Option 3
                    
            
            
            
            script.
                console.log("creating members tab...");
            
            .tab-pane(id="members")
            
                h1 Member Profiles
                span There are 
                    span(type="text", value="99 ")#noofmembers
                    span members
                
                script.
                    console.log('setting number of members');
                    //The following commands both do the same thing - only 1 is required
                    //document.getElementById("noofmembers").textContent=members.length + " ";
                    $('#noofmembers').html(members.length + " ");
                    
                
                each member, i in members
                    .panel(id="memberprofilecontainer"+member.id ,style="background-color:white")
                        .row
                            .col-xs-4
                                h5 ID No. #{member.id}
                                h5(id="memberrole"+member.id) Role
                                img.media-object(src='images/uploads/'+member.image)
                                h5 #{member.company}
                            .col-xs-5
                                h6 #{member.username}
                                h6 #{member.name} #{member.surname}
                                h6 #{member.nie}
                                h6 #{member.email}
                                h6 #{member.telephone}
                                h6 Registered/Approved: #{member.regDate}
                                h6 Last Seen: #{member.lastSeen}
                                
                            .col-xs-3
                                // The Edit button
                                .btn.btn-warning(id="edit"+member.id, type='button', style="width:100%") Edit...
                                
                                // The Approval button
                                if member.isApproved
                                    .btn.btn-success(id="approval"+member.id, type='button', style="width:100%", disabled=true) Approved!
                                else
                                    .btn.btn-danger(id="approval"+member.id, type='button', style="width:100%", data-toggle='modal', data-target='#approveModal', data-id=member.id) Unapproved...
                                
                                // The Activate/Suspend button
                                if !member.isSuspended
                                    .btn.btn-success(id="suspension"+member.id, type='button', style="width:100%", data-toggle='modal', data-target='#suspendModal', data-id=member.id) Active
                                else
                                    .btn.btn-danger(id="suspension"+member.id, type='button', style="width:100%", data-toggle='modal', data-target='#activateModal', data-id=member.id) Suspended
                                    
                #approveModal.modal.fade(role='dialog')
                    .modal-dialog
                        // Modal content
                        .modal-content
                            .modal-header
                                button.close(type='button', data-dismiss='modal') Ã—
                                h4.modal-title Approval of a new member profile
                            form(method='post', action='/members/approveMember')
                                .modal-body
                                    input.form-control(id="approvalId", name='approvalId', type='text', value="approvalId")
                                    //h5(id="modalId", name="modalId") ID
                                    p Please ensure all member data has been verified and checked before proceeding
                                .modal-footer
                                    button.btn.btn-default(type='button', data-dismiss='modal') Cancel            
                                    input.btn.btn-warning(name='submit', type='submit', value='Approve')
                
                #suspendModal.modal.fade(role='dialog')
                    .modal-dialog
                        // Modal content
                        .modal-content
                            .modal-header
                                button.close(type='button', data-dismiss='modal') Ã—
                                h4.modal-title Suspend a member profile
                            form(method='post', action='/members/suspendMember')
                                .modal-body
                                    input.form-control(id="suspendId", name='suspendId', type='text', value="suspendId")
                                    //h5(id="modalId", name="modalId") ID
                                    p You are about to suspend this member's profile
                                .modal-footer
                                    button.btn.btn-default(type='button', data-dismiss='modal') Cancel            
                                    input.btn.btn-danger(name='submit', type='submit', value='Suspend')
                
                #activateModal.modal.fade(role='dialog')
                    .modal-dialog
                        // Modal content
                        .modal-content
                            .modal-header
                                button.close(type='button', data-dismiss='modal') Ã—
                                h4.modal-title Activate a member profile
                            form(method='post', action='/members/activateMember')
                                .modal-body
                                    input.form-control(id="activateId", name='activateId', type='text', value="activateId")
                                    //h5(id="modalId", name="modalId") ID
                                    p You are about to activate this member's profile
                                .modal-footer
                                    button.btn.btn-default(type='button', data-dismiss='modal') Cancel            
                                    input.btn.btn-warning(name='submit', type='submit', value='Activate')
                
                
                script.
                    
                    for(i = 0; i < members.length; i++){
                        //set background colours of members by access level
                        if(members[i].access<25 && members[i].access>15){
                            // is an Owner profile
                            console.log("coloring skyblue");
                            $("#memberprofilecontainer" + members[i].id).attr("style", "background-color:skyblue");
                            $("#memberrole" + members[i].id).html("Owner");
                        }
                        else if(members[i].access<=15 && members[i].access>5){
                            // is a Rider profile
                            console.log("coloring yellow");
                            $("#memberprofilecontainer" + members[i].id).attr("style", "background-color:yellow");
                            $("#memberrole" + members[i].id).html("Rider");
                        }
                        else if(members[i].access<=5){
                            // is an Administrator profile
                            console.log("coloring blue");
                            $("#memberprofilecontainer" + members[i].id).attr("style", "background-color:grey");
                            $("#memberrole" + members[i].id).html("Administrator");
                        }
                        else{
                            console.log("no coloring");
                        }
                        
                        // setup buttons
                        $('#approval'+members[i].id).on('click', approveMember);
                        $('#suspension'+members[i].id).on('click', suspendMember);
                        $('#edit'+members[i].id).on('click', editMember);
                        
                    }
                    
                    function approveMember() {
                        var theID = $(this).data('id');
                        $("#approvalId").val( theID );
                        $("#approvalId").html( theID );
                    }
                    function suspendMember() {
                        var action = $(this).data('target');
                        var theID = $(this).data('id');
                        console.log(action);
                        if (action=="#suspendModal"){
                            $("#suspendId").val( theID );
                            $("#suspendId").html( theID );
                        }
                        if (action=="#activateModal"){
                            $("#activateId").val( theID );
                            $("#activateId").htmparticipantsl( theID );
                        }
                        
                    }
                    function editMember() {
                        var theID = $(this).data('id');
                        $("#editId").val( theID );
                        $("#editId").html( theID );
                    }
           
                
        
                    
    // script(async='',defer='',src='https://maps.googleapis.com/maps/api/js?key=AIzaSyCYoKrfsjvAU7lUHHVPp_vXxrpy_2bJkNw&callback=initMaps')
                
                               
                            
           
                            
                    
                         
                        
                
